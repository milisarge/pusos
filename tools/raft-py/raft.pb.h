/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.8-dev */

#ifndef PB_RAFT_PB_H_INCLUDED
#define PB_RAFT_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _AppendEntriesRequest {
    pb_callback_t id; /* The uuid of the Raft node sending the request.(leader) */
    int32_t term; /* The term from the requester's perspective. */
    int32_t prevLogIndex; /* Index of entry immediately preceding new ones. */
    int32_t prevLogTerm; /* The term of the prevLogIndex entry. */
    pb_callback_t entries; /* New ops to append. */
    int32_t leaderCommit; /* The leaderâ€™s commitIndex. - what index have been received by the majority */
} AppendEntriesRequest;

typedef struct _AppendEntriesReply {
    pb_callback_t id; /* The uuid of the Raft node sending the reply. */
    int32_t term; /* The term from the respondent's perspective. */
    bool success; /* True if consensus */
    int32_t conflictIndex; /* if declined, specifying the conflicting index */
    int32_t conflictTerm; /* if declined, specifying the conflicting term */
} AppendEntriesReply;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define AppendEntriesRequest_init_default        {{{NULL}, NULL}, 0, 0, 0, {{NULL}, NULL}, 0}
#define AppendEntriesReply_init_default          {{{NULL}, NULL}, 0, 0, 0, 0}
#define AppendEntriesRequest_init_zero           {{{NULL}, NULL}, 0, 0, 0, {{NULL}, NULL}, 0}
#define AppendEntriesReply_init_zero             {{{NULL}, NULL}, 0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define AppendEntriesRequest_id_tag              1
#define AppendEntriesRequest_term_tag            2
#define AppendEntriesRequest_prevLogIndex_tag    3
#define AppendEntriesRequest_prevLogTerm_tag     4
#define AppendEntriesRequest_entries_tag         5
#define AppendEntriesRequest_leaderCommit_tag    6
#define AppendEntriesReply_id_tag                1
#define AppendEntriesReply_term_tag              2
#define AppendEntriesReply_success_tag           3
#define AppendEntriesReply_conflictIndex_tag     4
#define AppendEntriesReply_conflictTerm_tag      5

/* Struct field encoding specification for nanopb */
#define AppendEntriesRequest_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   id,                1) \
X(a, STATIC,   SINGULAR, INT32,    term,              2) \
X(a, STATIC,   SINGULAR, INT32,    prevLogIndex,      3) \
X(a, STATIC,   SINGULAR, INT32,    prevLogTerm,       4) \
X(a, CALLBACK, REPEATED, STRING,   entries,           5) \
X(a, STATIC,   SINGULAR, INT32,    leaderCommit,      6)
#define AppendEntriesRequest_CALLBACK pb_default_field_callback
#define AppendEntriesRequest_DEFAULT NULL

#define AppendEntriesReply_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   id,                1) \
X(a, STATIC,   SINGULAR, INT32,    term,              2) \
X(a, STATIC,   SINGULAR, BOOL,     success,           3) \
X(a, STATIC,   SINGULAR, INT32,    conflictIndex,     4) \
X(a, STATIC,   SINGULAR, INT32,    conflictTerm,      5)
#define AppendEntriesReply_CALLBACK pb_default_field_callback
#define AppendEntriesReply_DEFAULT NULL

extern const pb_msgdesc_t AppendEntriesRequest_msg;
extern const pb_msgdesc_t AppendEntriesReply_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define AppendEntriesRequest_fields &AppendEntriesRequest_msg
#define AppendEntriesReply_fields &AppendEntriesReply_msg

/* Maximum encoded size of messages (where known) */
/* AppendEntriesRequest_size depends on runtime parameters */
/* AppendEntriesReply_size depends on runtime parameters */

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
